;;; -*- Lisp -*-
;;;
;;; YTools --- more than a library of useful utilities; a way of life.
;;;
;;; $Id$
;;; $Source$
;;;

(in-package :cl-user)

(defmacro set-yt-global (name val)
  `(set (intern (symbol-string ',name) (find-package :ytools))
	,val))

(mk:defsystem "YTOOLS"
    :source-pathname "clocc:src;ytools"
    :binary-pathname "clocc:bin;ytools"
;;;;    :source-pathname (translate-logical-pathname "clocc:src;ytools;")
;;;;    :binary-pathname (translate-logical-pathname "clocc:bin;ytools;")
    :source-extension "lisp"

    :initially-do
    (progn (load (translate-logical-pathname "clocc:src;ytload;ytload.lisp"))
	   (set-yt-global config-directory*
			  (translate-logical-pathname "clocc:src;ytools;"))
	   (set-yt-global ytload-directory*
			  (translate-logical-pathname "clocc:src;ytools;ytload;"))
	   ;;; Preset some config variables --
	   (set-yt-global ytools-home-dir*
			  (namestring (translate-logical-pathname
				          "clocc:src;ytools;")))
	   (set-yt-global standard-bin-path* "../../bin/")
	   (set-yt-global bin-idio* "")
	   (yt-install :ytfm :if-installed nil)
	   (yt-install :ytools :if-installed nil)
	   (setq *readtable* (eval (intern (symbol-name ':ytools-readtable*)
					   (find-package :ytools)))))

    :components
    ((:system "YTFM"
	:source-pathname "clocc:src;ytools;"
	:binary-pathname "clocc:bin;ytools;"
	;;;;    :source-pathname (translate-logical-pathname "clocc:src;ytload;")
	;;;;    :binary-pathname (translate-logical-pathname "clocc:bin;ytload;")
	:source-extension "lisp"

	:components
	((:file "base")
	 (:file "datafun" :depends-on ("base"))
	 (:file "pathname" :depends-on ("base" "datafun"))
	 (:file "module" :depends-on ("base" "datafun" "pathname"))
	 (:file "slurp" :depends-on ("base" "datafun" "pathname" "module"))
	 (:file "files" :depends-on ("base" "datafun" "pathname" "module" "slurp"))
	 (:file "depend" :depends-on ("base" "datafun" "pathname"
				      "module" "slurp" "files")))

	:finally-do
	(progn (depends-on-disable)))
     (:module "core-ytools"
	:source-pathname "./"
	:binary-pathname "./"
	:components
	((:file "binders" :depends-on ())
	 (:file "mapper" :depends-on ("setter" "binders" "repeat" "outin"))
	 (:file "misc" :depends-on ("setter" "binders" "repeat" "outin"))
	 (:file "multilet" :depends-on ("signal" "object" "misc" "setter" "binders"
					"mapper" "repeat" "outin" "setter"))
	 (:file "object" :depends-on ("misc" "mapper" "repeat" "outin"))
	 (:file "outin")
	 (:file "repeat" :depends-on ("outin" "binders"))
	 (:file "setter" :depends-on ("binders" "repeat" "outin"))
	 (:file "signal" :depends-on ("object" "setter"))))
     (:file "nilscompat" :depends-on ("core-ytools"))
     (:file "fileutils" :depends-on ("core-ytools"))
     (:file "bq" :depends-on ("core-ytools"))))


